package camelinactionConsumer;

public class DatabaseInterface {

	private DatabaseInterface(){};
	private static DatabaseQueryEngine myDatabaseQueryEngine;
	
	// DatabaseInterface is a Singleton
	// It also is the top level layer
	public static DatabaseInterfaceImpl getInstance(){
		if (myDatabaseInterface == null) {
			myDatabaseInterface = new DatabaseInterfaceImpl();
			myDatabaseQueryEngine = new DatabaseQueryEngine();
		}
		return myDatabaseInterface;
	}
	private static DatabaseInterfaceImpl myDatabaseInterface = null;

    
	// METHODS (basically all of these are implementing the Facade design pattern, calling down to DatabaseQueryEngine layer):

	
	// INITIALIZING SYSTEM:
	// NOTE: only call this once ever, after having done so once always use synchronizeAndStartSystem
	// Method to initialize the database system the first time it is ever used
	public final void initializeSystem() throws Exception {
		myDatabaseQueryEngine.initializeDatabaseEngine();
	 }
	    
    // STARTING SYSTEM:
	// NOTE: only call this once
    //Method to start and synchronize the database system
	// TO DO: think about how to avoid calling this twice!
    public void synchronizeAndStartSystem() throws Exception {		
        myDatabaseQueryEngine.synchronizeSystem();
    }
    
    
    // UPLOADING:
    // TO DO: PROBABLY NOT SUPPORTED
    
    
    // SEARCHING INDIVIDUAL ENTRIES:
    //Method to print out details of a crime, given its ID
    public void printDetailsCrimeByID( int crimeID ) {
    	System.out.println(myDatabaseQueryEngine.getDetailsForCrimeID(crimeID));
    }
    
    
    // DOWNLOADING:
    //Method to download all crime data in the database, in a csv file with the given file name
    public void downloadAllData( String outputFileName ) {
        myDatabaseQueryEngine.callDownloadAllData(outputFileName);
    }
    
    //Method to download data of all crimes in a certain city, given its name. The file will be a single csv file with the given file name.
    public void downloadAllDataForCity( String name, String outputFileName ) {
        myDatabaseQueryEngine.callDownloadAllDataForCity(name, outputFileName);
    }
    
    //Method to download data of all crimes in a certain year. The file will be a single csv file with the given file name.
    public void downloadAllDataForYear( int year, String outputFileName ) {
        myDatabaseQueryEngine.callDownloadAllDataForYear(year, outputFileName);
    }
    
    //Method to download data of all crimes in a certain month. The file will be a single csv file with the given file name.
    public void downloadAllDataForMonth( int month, String outputFileName ) {
        myDatabaseQueryEngine.callDownloadAllDataForMonth(month, outputFileName);
    }
    
    //Method to download data of all crimes in a certain crime category, given its ucrNcicCode. The file will be a single csv file with the given file name.
    public void downloadAllDataForCrimeCategory( int ucrNcicCode, String outputFileName ) {
        myDatabaseQueryEngine.callDownloadAllDataForCrimeCategory(ucrNcicCode, outputFileName);
    }
    
    //Method to download data of crimes in a certain city (indicated by cityName), filtered based on a search query in a specific column. The columnNames to be searched are "grid", "district", "beat", "ucrNcicCode", "year" and "month". The file will be a single csv file with the given file name.
    public void downloadFilteredDataForCity( String cityName, String columnName, String queryValue, String outputFileName ) {
        myDatabaseQueryEngine.callDownloadFilteredDataForCity(cityName, columnName, queryValue, outputFileName);
    }
    
    //Method to download data of crimes in a certain year (indicated by year), filtered based on a search query in a specific column. The columnNames to be searched are "city", "ucrNcicCode" and "month". The file will be a single csv file with the given file name.
    public void downloadFilteredDataForYear( int year, String columnName, String queryValue, String outputFileName ) {
        myDatabaseQueryEngine.callDownloadFilteredDataForYear(year, columnName, queryValue, outputFileName);
    }
    
    //Method to download data of crimes in a certain month (indicated by month), filtered based on a search query in a specific column. The columnNames to be searched are "city", "ucrNcicCode" and "year". The file will be a single csv file with the given file name.
    public void downloadFilteredDataForMonth( int month, String columnName, String queryValue, String outputFileName ) {
        myDatabaseQueryEngine.callDownloadFilteredDataForMonth(month, columnName, queryValue, outputFileName);
    }
    
    //Method to download data of crimes of a certain crime category (indicated by ucrNcicCode), filtered based on a search query in a specific column. The columnNames to be searched are "city", "year" and "month". The file will be a single csv file with the given file name.
    public void downloadFilteredDataForCrimeCategory( int ucrNcicCode, String columnName, String queryValue, String outputFileName ) {
        myDatabaseQueryEngine.callDownloadFilteredDataForCrimeCategory(ucrNcicCode, columnName, queryValue, outputFileName);
    }

    
    // STATISTICS:
    //Method to print the total count of crimes in the database
    public void printTotalCrimeCount( ) {
        System.out.println(myDatabaseQueryEngine.getTotalCountCrimes());
    }
    
    //Method to print a specific statistic per city, based on one of the two methods: "mean" or median" of crimes per city
    public void printSpecificStatisticPerCity( String statisticsMethod ) {
        System.out.println(myDatabaseQueryEngine.getSpecificStatisticPerCity(statisticsMethod));
    }
    
    //Method to print a specific statistic per year, based on one of the two methods: "mean" or median" of crimes per year
    public void printSpecificStatisticPerYear( String statisticsMethod ) {
    	System.out.println(myDatabaseQueryEngine.getSpecificStatisticPerYear(statisticsMethod));
    }
    
    //Method to print a specific statistic per month, based on one of the two methods: "mean" or median" of crimes per month
    public void printSpecificStatisticPerMonth( String statisticsMethod ) {
    	System.out.println(myDatabaseQueryEngine.getSpecificStatisticPerMonth(statisticsMethod));
    }
    
    //Method to print a specific statistic per crime category, based on one of the two methods: "mean" or median" of crimes per category
    public void printSpecificStatisticPerCrimeCategory( String statisticsMethod ) {
    	System.out.println(myDatabaseQueryEngine.getSpecificStatisticPerCrimeCategory(statisticsMethod));
    }
    
    //Method to print summary and statistics for the entire database
    public void printOverallSummaryAndStatistics( ) {
    	System.out.println(myDatabaseQueryEngine.getOverallSummaryAndStatistics());
    }
    
    //Method to print all statistics for a given city
    public void printAllStatisticsForCity( String cityName ) {
    	System.out.println(myDatabaseQueryEngine.getAllStatisticsForCity(cityName));
    }
    
    //Method to print all statistics for a given year
    public void printAllStatisticsForYear( int year ) {
    	System.out.println(myDatabaseQueryEngine.getAllStatisticsForYear(year));
    }
    
    //Method to print all statistics for a given month
    public void printAllStatisticsForMonth( int month ) {
    	System.out.println(myDatabaseQueryEngine.getAllStatisticsForMonth(month));
    }
    
    //Method to print summary statistics for a given crime category
    public void printAllStatisticsForCrimeCategory( int ucrNcicCode ) {
    	System.out.println(myDatabaseQueryEngine.getAllStatisticsForCrimeCategory(ucrNcicCode));
    }
   
}