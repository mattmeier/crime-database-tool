/**
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

//package camelinaction;
package camelinaction;

import org.apache.camel.CamelContext;
import org.apache.camel.Exchange;
import org.apache.camel.Processor;
import org.apache.camel.builder.RouteBuilder;
import org.apache.camel.impl.DefaultCamelContext;

import javax.jms.ConnectionFactory;

import org.apache.activemq.ActiveMQConnectionFactory;
import org.apache.camel.component.jms.JmsComponent;

public class Producer {

	public static void main(String args[]) throws Exception {
		// create CamelContext
		CamelContext context = new DefaultCamelContext();

		// connect to ActiveMQ JMS broker listening on localhost on port 61616
		ConnectionFactory connectionFactory = 
				new ActiveMQConnectionFactory("tcp://localhost:61616");
		context.addComponent("jms",
				JmsComponent.jmsComponentAutoAcknowledge(connectionFactory));

		// add our route to the CamelContext
		context.addRoutes(new RouteBuilder() {
			public void configure() {
				String googleNewsURL = "http://news.google.com/?output=rss";
				String numberOfEntries = "&num=30";
				String options = "&splitEntries=false&consumer.delay=5000";
				
				from("rss:" + googleNewsURL + numberOfEntries + options)
				//.filter().xpath("/rss/channel/item/title[contains('Obama')]")
				.marshal().rss()
				.setBody(xpath("/rss/channel/item/title/text()"))
				.split(body())
				.process(new Processor() {
					public void process(Exchange e) throws Exception {
						String[] parts = e.getIn().getBody(String.class).split("-");
						StringBuilder myStringBuilder = new StringBuilder();
						myStringBuilder.append("title=\"" + parts[0].trim() + "\"");
						myStringBuilder.append(" source=\"" + parts[1].trim() + "\"");
						e.getIn().setBody(myStringBuilder.toString());
					} })
				.to("jms:queue:RSS_GOOGLE_NEWS_UPDATES");
				try {
					Thread.sleep(3000);
				} catch (InterruptedException e) {
					e.printStackTrace();
				}
			}
		});

		// start the route and let it do its work
		context.start();
		Thread.sleep(3000);

		// stop the CamelContext
		context.stop();
	}
}
