package camelinactionProducer;
import java.util.*;

public class CrimeCategory extends DatabaseCategory {

	// CONSTRUCTOR:
	public CrimeCategory (String categoryCode) { 
		databaseType = "crimeCategory";
		name = categoryCode;
		crimesRegister = new HashMap <Integer, Crime>();
	}

    // overriding abstract method to return database type
    @Override
    public String GetDatabaseType( ) {
        return "crimeCategory";
    }


	
    // method to get the IDs for all crimes in a certain city
    @Override
    public Vector<Integer> getCrimeIDsInCity(String cityName) {
        return searchCrimesForString("city", cityName);
    } 

    
    // method to get the IDs for all crimes of a certain category, given by ucrNcicCodeValue
    @Override
    public Vector<Integer> getCrimeIDsForCategory(int ucrNcicCodeValue) {
        Vector<Integer> ids = new Vector<Integer>();
        if (Integer.parseInt(name) == ucrNcicCodeValue) {
            ids = new Vector<Integer>(crimesRegister.keySet());
        }
        return ids;
    } 

    
    // Method to get the IDs for all crimes of a certain year
    @Override
    public Vector<Integer> getCrimeIDsForYear(int year) {
        return searchCrimesForInt("year", year);
    } 

    
    // Method to get the IDs for all crimes of a certain month (in any year)
    @Override
    public Vector<Integer> getCrimeIDsForMonth(int month) {
        return searchCrimesForInt("month", month);
    } 


    // Method to get the count of crimes for a given city
    @Override
    public Integer getCrimeCountForCity(String city) {
        Vector<Integer> idVector = getCrimeIDsInCity(city); 
        return idVector.size();
    } 

    
    // Method to get the count of crimes for a given category
    @Override
    public Integer getCrimeCountForCategory(int ucrNcicCodeValue) {
        if (Integer.parseInt(name) == ucrNcicCodeValue) {
            return getTotalCrimeCount();
        }
        else 
            return 0;
    } 

    
    // Method to get the count of crimes for a given year
    @Override
    public Integer getCrimeCountForYear(int year) {
        Vector<Integer> idVector = getCrimeIDsForYear(year); 
        return idVector.size();
    } 

    
    // Method to get the count of crimes for a given month
    @Override
    public Integer getCrimeCountForMonth(int month) {
        Vector<Integer> idVector = getCrimeIDsForMonth(month); 
        return idVector.size();
    } 

    
    // Method to get the 3 cities with the most crimes
    @Override
    public String[] getMost3Cities() {
        return getMost3StringValues("city");
    }

    
    // Method to get the 3 crime categories with the most crimes
    @Override
    public Integer[] getMost3Categories() {
        Integer[] array = {Integer.parseInt(name), -1, -1};
        return array;
    }

    
    // Method to get the 3 years with the most crimes
    @Override
    public Integer[] getMost3Years() {
        return getMost3IntValues("year");
    }

    
    // Method to get the 3 months with the most crimes
    @Override
    public Integer[] getMost3Months() {
        return getMost3IntValues("month");
    }

    
    // Method to get the 3 cities with the most crimes
    @Override
    public String[] getLeast3Cities() {
        return getLeast3StringValues("city");
    }

    
    // Method to get the 3 crime categories with the least crimes
    @Override
    public Integer[] getLeast3Categories() {
        Integer[] array = {Integer.parseInt(name), -1, -1};
        return array;
    }


    
    // Method to get the 3 years with the least crimes
    @Override
    public Integer[] getLeast3Years() {
        return getLeast3IntValues("year");
    } 

    
    // Method to get the 3 months with the least crimes
    @Override
    public Integer[] getLeast3Months() {
        return getLeast3IntValues("month");
    } 
    
    
    // Method to get the average number of crimes per city
    @Override
    public Double getAveragePerCity() {
        return getAverageCrimesPerStringValue("city");
    }

    
    // Method to get the average number of crimes per category
    @Override
    public Double getAveragePerCategory() {
        return (double) 1.0;
    }

    
    // Method to get the average number of crimes per year
    @Override
    public Double getAveragePerYear() {
        return getAverageCrimesPerIntValue("year");
    }

    
    // Method to get the average number of crimes per month
    @Override
    public Double getAveragePerMonth() {
        return getAverageCrimesPerIntValue("month");
    }

    @Override
    public Double getMedianPerCity() {
        return getMedianCrimesForStringValue("city");
    }

    
    // Method to get the median number of crimes per category
    @Override
    public Double getMedianPerCategory() {
        return (double) 1.0;
    }

    
    // Method to get the median number of crimes per year
    @Override
    public Double getMedianPerYear() {
        return getMedianCrimesForIntValue("year");
    }

    
    // Method to get the median number of crimes per month
    @Override
    public Double getMedianPerMonth() {
        return getMedianCrimesForIntValue("month");
    }

}